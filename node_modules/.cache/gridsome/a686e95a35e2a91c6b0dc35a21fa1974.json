{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue","mtime":1601735446919},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601737131598},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":1601737131580},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601737131598},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":1601737142391}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/es.string.anchor\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport _objectSpread from \"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\nexport default {\n  components: {\n    ChevronRightIcon: ChevronRightIcon,\n    SearchIcon: SearchIcon\n  },\n  data: function data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results: function results() {\n      var fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings: function headings() {\n      var result = [];\n      var allPages = this.$static.allMarkdownPage.edges.map(function (edge) {\n        return edge.node;\n      }); // Create the array of all headings of all pages.\n\n      allPages.forEach(function (page) {\n        page.headings.forEach(function (heading) {\n          result.push(_objectSpread(_objectSpread({}, heading), {}, {\n            path: page.path,\n            title: page.title\n          }));\n        });\n      });\n      return result;\n    },\n    showResult: function showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment: function increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement: function decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go: function go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      var result; // If we don't have focus on a result, just navigate to the first one.\n\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(result.path + result.anchor); // Unfocus the input and reset the query.\n\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n};",null]}