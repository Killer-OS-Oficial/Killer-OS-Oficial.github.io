{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue","mtime":1601735446919},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601735434677},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":1601735434382},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601735434677},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":1601735446128}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\n\nexport default {\n  components: {\n    ChevronRightIcon,\n    SearchIcon\n  },\n\n  data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results() {\n      const fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings() {\n      let result = [];\n      const allPages = this.$static.allMarkdownPage.edges.map(edge => edge.node);\n\n      // Create the array of all headings of all pages.\n      allPages.forEach(page => {\n        page.headings.forEach(heading => {\n          result.push({\n            ...heading,\n            path: page.path,\n            title: page.title\n          });\n        });\n      });\n\n      return result;\n    },\n    showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      let result;\n\n      // If we don't have focus on a result, just navigate to the first one.\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(\n        result.path + result.anchor\n      );\n\n      // Unfocus the input and reset the query.\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n\n};\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    @keydown.down=\"increment\"\n    @keydown.up=\"decrement\"\n    @keydown.enter=\"go\"\n    class=\"relative\"\n  >\n    <label class=\"relative block\">\n      <span class=\"sr-only\">Buscar en Killer-OS Wiki</span>\n      <div class=\"absolute inset-y-0 left-0 flex items-center justify-center px-3 py-2 opacity-50\">\n        <SearchIcon size=\"1.25x\" class=\"text-ui-typo\" />\n      </div>\n      <input\n        ref=\"input\"\n        type=\"search\"\n        :value=\"query\"\n        class=\"block w-full py-2 pl-10 pr-4 border-2 rounded-lg bg-ui-sidebar border-ui-sidebar focus:bg-ui-background\"\n        :class=\"{'rounded-b-none': showResult,}\"\n        placeholder=\"Buscar en Killer-OS Wiki...\"\n        @focus=\"focused = true\"\n        @blur=\"focused = false\"\n        @input=\"focusIndex = -1; query = $event.target.value\"\n        @change=\"query = $event.target.value\"\n      />\n    </label>\n    <div\n      v-if=\"showResult\"\n      class=\"fixed inset-x-0 z-50 overflow-y-auto border-2 border-t-0 rounded-lg rounded-t-none shadow-lg results bg-ui-background bottom:0 sm:bottom-auto sm:absolute border-ui-sidebar\"\n      style=\"max-height: calc(100vh - 120px)\"\n    >\n      <ul class=\"px-4 py-2 m-0\">\n        <li v-if=\"results.length === 0\" class=\"px-2\">\n          No hay resultados para <span class=\"font-bold\">{{ query }}</span>.\n        </li>\n\n        <li\n          v-else\n          v-for=\"(result, index) in results\"\n          :key=\"result.path + result.anchor\"\n          @mouseenter=\"focusIndex = index\"\n          @mousedown=\"go\"\n          class=\"border-ui-sidebar\"\n          :class=\"{\n            'border-b': index + 1 !== results.length\n          }\"\n        >\n          <g-link\n            :to=\"result.path + result.anchor\"\n            class=\"block p-2 -mx-2 text-base font-bold rounded-lg\"\n            :class=\"{\n              'bg-ui-sidebar text-ui-primary': focusIndex === index,\n            }\"\n          >\n\n            <span v-if=\"result.value === result.title\">\n              {{ result.value }}\n            </span>\n\n            <span v-else class=\"flex items-center\">\n              {{ result.title }}\n              <ChevronRightIcon size=\"1x\" class=\"mx-1\" />\n              <span class=\"font-normal opacity-75\">{{ result.value }}</span>\n            </span>\n\n          </g-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<static-query>\nquery Search {\n   allMarkdownPage{\n    edges {\n      node {\n        id\n        path\n        title\n        headings {\n        \tdepth\n          value\n          anchor\n      \t}\n      }\n    }\n  }\n}\n</static-query>\n\n<script>\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\n\nexport default {\n  components: {\n    ChevronRightIcon,\n    SearchIcon\n  },\n\n  data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results() {\n      const fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings() {\n      let result = [];\n      const allPages = this.$static.allMarkdownPage.edges.map(edge => edge.node);\n\n      // Create the array of all headings of all pages.\n      allPages.forEach(page => {\n        page.headings.forEach(heading => {\n          result.push({\n            ...heading,\n            path: page.path,\n            title: page.title\n          });\n        });\n      });\n\n      return result;\n    },\n    showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      let result;\n\n      // If we don't have focus on a result, just navigate to the first one.\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(\n        result.path + result.anchor\n      );\n\n      // Unfocus the input and reset the query.\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n\n};\n</script>\n\n<style>\n</style>\n"]}]}