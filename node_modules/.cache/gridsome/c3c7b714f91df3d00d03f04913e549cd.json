{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Sidebar.vue","mtime":1601671367457},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601671359173},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":1601671359038},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601671359173},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":1601671365793}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.find\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      expanded: []\n    };\n  },\n  computed: {\n    pages: function pages() {\n      return this.$page.allMarkdownPage.edges.map(function (edge) {\n        return edge.node;\n      });\n    },\n    sidebar: function sidebar() {\n      var _this = this;\n\n      return this.$static.metadata.settings.sidebar.find(function (sidebar) {\n        return sidebar.name === _this.$page.markdownPage.sidebar;\n      });\n    },\n    showSidebar: function showSidebar() {\n      return this.$page.markdownPage.sidebar && this.sidebar;\n    },\n    currentPage: function currentPage() {\n      return this.$page.markdownPage;\n    }\n  },\n  methods: {\n    getClassesForAnchor: function getClassesForAnchor(_ref) {\n      var path = _ref.path;\n      return {\n        \"text-ui-primary\": this.currentPage.path === path,\n        \"transition transform hover:translate-x-1 hover:text-ui-primary\": !this.currentPage.path === path\n      };\n    },\n    findPages: function findPages(links) {\n      var _this2 = this;\n\n      return links.map(function (link) {\n        return _this2.pages.find(function (page) {\n          return page.path === link;\n        });\n      });\n    }\n  }\n};",null]}