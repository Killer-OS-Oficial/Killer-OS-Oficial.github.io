{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/gridsome/app/fallbacks/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/gridsome/app/fallbacks/App.vue","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  metaInfo: function metaInfo() {\n    var metaInfo = {\n      meta: []\n    };\n    var _this$$static$metadat = this.$static.metadata,\n        siteName = _this$$static$metadat.siteName,\n        siteDescription = _this$$static$metadat.siteDescription;\n\n    if (siteName) {\n      metaInfo.title = siteName;\n    }\n\n    if (siteDescription) {\n      metaInfo.meta.push({\n        key: 'description',\n        name: 'description',\n        content: siteDescription\n      });\n    }\n\n    return metaInfo;\n  }\n};",{"version":3,"sources":["/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/gridsome/app/fallbacks/App.vue"],"names":["metaInfo","meta","$static","metadata","siteName","siteDescription","title","push","key","name","content"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe;AACbA,EAAAA,QADa,sBACD;AACV,QAAMA,QAAQ,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjB;AADU,gCAE4B,KAAKC,OAAL,CAAaC,QAFzC;AAAA,QAEFC,QAFE,yBAEFA,QAFE;AAAA,QAEQC,eAFR,yBAEQA,eAFR;;AAIV,QAAID,QAAJ,EAAc;AACZJ,MAAAA,QAAQ,CAACM,KAAT,GAAiBF,QAAjB;AACD;;AAED,QAAIC,eAAJ,EAAqB;AACnBL,MAAAA,QAAQ,CAACC,IAAT,CAAcM,IAAd,CAAmB;AACjBC,QAAAA,GAAG,EAAE,aADY;AAEjBC,QAAAA,IAAI,EAAE,aAFW;AAGjBC,QAAAA,OAAO,EAAEL;AAHQ,OAAnB;AAKD;;AAED,WAAOL,QAAP;AACD;AAlBY,CAAf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  metaInfo () {\n    const metaInfo = { meta: [] }\n    const { siteName, siteDescription } = this.$static.metadata\n\n    if (siteName) {\n      metaInfo.title = siteName\n    }\n\n    if (siteDescription) {\n      metaInfo.meta.push({\n        key: 'description',\n        name: 'description',\n        content: siteDescription\n      })\n    }\n\n    return metaInfo\n  }\n}\n"]}]}