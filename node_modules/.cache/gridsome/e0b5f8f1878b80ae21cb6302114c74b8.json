{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Sidebar.vue","mtime":1601735446919},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601735434677},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":1601735434382},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601735434677},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":1601735446128}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      expanded: []\n    };\n  },\n  computed: {\n    pages() {\n      return this.$page.allMarkdownPage.edges.map(edge => edge.node);\n    },\n    sidebar() {\n      return this.$static.metadata.settings.sidebar.find(\n        sidebar => sidebar.name === this.$page.markdownPage.sidebar\n      );\n    },\n    showSidebar() {\n      return this.$page.markdownPage.sidebar\n        && this.sidebar;\n    },\n    currentPage() {\n      return this.$page.markdownPage;\n    }\n  },\n  methods: {\n    getClassesForAnchor({ path }) {\n      return {\n        \"text-ui-primary\": this.currentPage.path === path,\n        \"transition transform hover:translate-x-1 hover:text-ui-primary\": ! this.currentPage.path === path\n      };\n    },\n    findPages(links) {\n      return links.map(link => this.pages.find(page => page.path === link));\n    }\n  },\n};\n",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    ref=\"sidebar\"\n    v-if=\"showSidebar\"\n    class=\"pt-8 lg:pt-12\"\n  >\n    <div\n      v-for=\"(section, index) in sidebar.sections\"\n      :key=\"section.title\"\n      class=\"pb-4 mb-4 border-ui-border\"\n      :class=\"{ 'border-b': index < sidebar.sections.length -1 }\"\n    >\n      <h3 class=\"pt-0 mt-0 mb-1 text-sm tracking-tight uppercase border-none\">\n        {{ section.title }}\n      </h3>\n\n      <ul class=\"max-w-full mb-0\">\n        <li\n          v-for=\"page in findPages(section.items)\"\n          :id=\"page.path\"\n          :key=\"page.path\"\n          :class=\"getClassesForAnchor(page)\"\n          @mousedown=\"$emit('navigate')\"\n        >\n          <g-link\n            :to=\"`${page.path}`\"\n            class=\"flex items-center py-1 text-sm hover:text-ui-primary\"\n          >\n           <span\n              class=\"absolute w-2 h-2 -ml-3 rounded-full opacity-0 bg-ui-primary transition transform scale-0 origin-center\"\n              :class=\"{\n                'opacity-100 scale-100': currentPage.path === page.path\n              }\"\n            ></span>\n            {{ page.title }}\n          </g-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<static-query>\nquery Sidebar {\n  metadata {\n    settings {\n      sidebar {\n        name\n        sections {\n          title\n          items\n        }\n      }\n    }\n  }\n}\n</static-query>\n\n<script>\nexport default {\n  data() {\n    return {\n      expanded: []\n    };\n  },\n  computed: {\n    pages() {\n      return this.$page.allMarkdownPage.edges.map(edge => edge.node);\n    },\n    sidebar() {\n      return this.$static.metadata.settings.sidebar.find(\n        sidebar => sidebar.name === this.$page.markdownPage.sidebar\n      );\n    },\n    showSidebar() {\n      return this.$page.markdownPage.sidebar\n        && this.sidebar;\n    },\n    currentPage() {\n      return this.$page.markdownPage;\n    }\n  },\n  methods: {\n    getClassesForAnchor({ path }) {\n      return {\n        \"text-ui-primary\": this.currentPage.path === path,\n        \"transition transform hover:translate-x-1 hover:text-ui-primary\": ! this.currentPage.path === path\n      };\n    },\n    findPages(links) {\n      return links.map(link => this.pages.find(page => page.path === link));\n    }\n  },\n};\n</script>\n"]}]}