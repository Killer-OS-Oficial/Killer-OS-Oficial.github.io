{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue","mtime":1601735446919},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/es.string.anchor\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport _objectSpread from \"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\nexport default {\n  components: {\n    ChevronRightIcon: ChevronRightIcon,\n    SearchIcon: SearchIcon\n  },\n  data: function data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results: function results() {\n      var fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings: function headings() {\n      var result = [];\n      var allPages = this.$static.allMarkdownPage.edges.map(function (edge) {\n        return edge.node;\n      }); // Create the array of all headings of all pages.\n\n      allPages.forEach(function (page) {\n        page.headings.forEach(function (heading) {\n          result.push(_objectSpread(_objectSpread({}, heading), {}, {\n            path: page.path,\n            title: page.title\n          }));\n        });\n      });\n      return result;\n    },\n    showResult: function showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment: function increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement: function decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go: function go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      var result; // If we don't have focus on a result, just navigate to the first one.\n\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(result.path + result.anchor); // Unfocus the input and reset the query.\n\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n};",{"version":3,"sources":["/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue"],"names":["Fuse","ChevronRightIcon","SearchIcon","components","data","query","focusIndex","focused","computed","results","fuse","headings","keys","threshold","search","slice","result","allPages","$static","allMarkdownPage","edges","map","edge","node","forEach","page","heading","push","path","title","showResult","length","methods","increment","decrement","go","$router","anchor","$refs","input","blur"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,mBAA7C;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE;AACVF,IAAAA,gBAAgB,EAAhBA,gBADU;AAEVC,IAAAA,UAAU,EAAVA;AAFU,GADC;AAMbE,EAAAA,IANa,kBAMN;AACL,WAAO;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,UAAU,EAAE,CAAC,CAFR;AAGLC,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD,GAZY;AAabC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,qBACE;AACR,UAAMC,IAAI,GAAG,IAAIV,IAAJ,CAAS,KAAKW,QAAd,EAAwB;AACnCC,QAAAA,IAAI,EAAE,CAAC,OAAD,CAD6B;AAEnCC,QAAAA,SAAS,EAAE;AAFwB,OAAxB,CAAb;AAKA,aAAOH,IAAI,CAACI,MAAL,CAAY,KAAKT,KAAjB,EAAwBU,KAAxB,CAA8B,CAA9B,EAAiC,EAAjC,CAAP;AACD,KARO;AASRJ,IAAAA,QATQ,sBASG;AACT,UAAIK,MAAM,GAAG,EAAb;AACA,UAAMC,QAAQ,GAAG,KAAKC,OAAL,CAAaC,eAAb,CAA6BC,KAA7B,CAAmCC,GAAnC,CAAuC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAT;AAAA,OAA3C,CAAjB,CAFS,CAIT;;AACAN,MAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACvBA,QAAAA,IAAI,CAACd,QAAL,CAAca,OAAd,CAAsB,UAAAE,OAAO,EAAI;AAC/BV,UAAAA,MAAM,CAACW,IAAP,iCACKD,OADL;AAEEE,YAAAA,IAAI,EAAEH,IAAI,CAACG,IAFb;AAGEC,YAAAA,KAAK,EAAEJ,IAAI,CAACI;AAHd;AAKD,SAND;AAOD,OARD;AAUA,aAAOb,MAAP;AACD,KAzBO;AA0BRc,IAAAA,UA1BQ,wBA0BK;AACX;AACA,aAAO,KAAKvB,OAAL,IAAgB,KAAKF,KAAL,CAAW0B,MAAX,GAAoB,CAA3C;AACD;AA7BO,GAbG;AA4CbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SADO,uBACK;AACV,UAAI,KAAK3B,UAAL,GAAkB,KAAKG,OAAL,CAAasB,MAAb,GAAsB,CAA5C,EAA+C;AAC7C,aAAKzB,UAAL;AACD;AACF,KALM;AAMP4B,IAAAA,SANO,uBAMK;AACV,UAAI,KAAK5B,UAAL,IAAmB,CAAvB,EAA0B;AACxB,aAAKA,UAAL;AACD;AACF,KAVM;AAWP6B,IAAAA,EAXO,gBAWF;AACH;AACA,UAAI,KAAK1B,OAAL,CAAasB,MAAb,KAAwB,CAA5B,EAA+B;AAC7B;AACD;;AAED,UAAIf,MAAJ,CANG,CAQH;;AACA,UAAI,KAAKV,UAAL,KAAoB,CAAC,CAAzB,EAA4B;AAC1BU,QAAAA,MAAM,GAAG,KAAKP,OAAL,CAAa,CAAb,CAAT;AACD,OAFD,MAEO;AACLO,QAAAA,MAAM,GAAG,KAAKP,OAAL,CAAa,KAAKH,UAAlB,CAAT;AACD;;AAED,WAAK8B,OAAL,CAAaT,IAAb,CACEX,MAAM,CAACY,IAAP,GAAcZ,MAAM,CAACqB,MADvB,EAfG,CAmBH;;AACA,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB;AACA,WAAKnC,KAAL,GAAa,EAAb;AACD;AAjCM;AA5CI,CAAf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\n\nexport default {\n  components: {\n    ChevronRightIcon,\n    SearchIcon\n  },\n\n  data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results() {\n      const fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings() {\n      let result = [];\n      const allPages = this.$static.allMarkdownPage.edges.map(edge => edge.node);\n\n      // Create the array of all headings of all pages.\n      allPages.forEach(page => {\n        page.headings.forEach(heading => {\n          result.push({\n            ...heading,\n            path: page.path,\n            title: page.title\n          });\n        });\n      });\n\n      return result;\n    },\n    showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      let result;\n\n      // If we don't have focus on a result, just navigate to the first one.\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(\n        result.path + result.anchor\n      );\n\n      // Unfocus the input and reset the query.\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n\n};\n"]}]}