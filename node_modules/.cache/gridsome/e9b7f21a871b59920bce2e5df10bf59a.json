{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/gridsome/app/components/Image.js","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/gridsome/app/components/Image.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.slice\";\nimport _objectSpread from \"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport { stringifyClass } from '../utils/class'; // @vue/component\n\nexport default {\n  functional: true,\n  props: {\n    src: {\n      type: [Object, String],\n      required: true\n    },\n    width: {\n      type: String,\n      \"default\": ''\n    },\n    height: {\n      type: String,\n      \"default\": ''\n    },\n    quality: {\n      type: String,\n      \"default\": ''\n    },\n    fit: {\n      type: String,\n      \"default\": ''\n    },\n    position: {\n      type: String,\n      \"default\": ''\n    },\n    background: {\n      type: String,\n      \"default\": ''\n    },\n    blur: {\n      type: String,\n      \"default\": ''\n    },\n    immediate: {\n      type: true,\n      \"default\": undefined\n    },\n    imageWidths: {\n      type: String,\n      \"default\": undefined\n    }\n  },\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        props = _ref.props;\n    var classNames = [data[\"class\"], 'g-image'];\n    var noscriptClassNames = [data.staticClass, classNames.slice()];\n    var isImmediate = props.immediate || props.immediate !== undefined;\n    var directives = data.directives || [];\n    var attrs = data.attrs || {};\n    var hook = data.hook || {};\n    var res = [];\n\n    switch (_typeof(props.src)) {\n      case 'string':\n        attrs.src = props.src;\n        break;\n\n      case 'object':\n        {\n          var _props$src = props.src,\n              src = _props$src.src,\n              srcset = _props$src.srcset,\n              size = _props$src.size,\n              dataUri = _props$src.dataUri;\n          var isLazy = !isImmediate && dataUri;\n          var sizes = attrs.sizes || props.src.sizes;\n          attrs.src = isLazy ? dataUri : src;\n          attrs.width = size.width;\n          if (isLazy) attrs['data-src'] = src;\n          if (srcset.length) attrs[\"\".concat(isLazy ? 'data-' : '', \"srcset\")] = Array.isArray(srcset) ? srcset.join(', ') : srcset;\n          if (sizes) attrs[\"\".concat(isLazy ? 'data-' : '', \"sizes\")] = sizes;\n\n          if (isLazy) {\n            directives.push({\n              name: 'g-image'\n            });\n          }\n\n          break;\n        }\n    }\n\n    hook.update = function (oldVnode, vnode) {\n      var _oldVnode$data$attrs = oldVnode.data.attrs,\n          oldAttrs = _oldVnode$data$attrs === void 0 ? {} : _oldVnode$data$attrs;\n      var _vnode$data$attrs = vnode.data.attrs,\n          attrs = _vnode$data$attrs === void 0 ? {} : _vnode$data$attrs;\n\n      if (attrs['data-src'] && attrs.src !== oldAttrs.src) {\n        // clear srcset and sizes to show the dataUri image\n        vnode.elm.srcset = '';\n        vnode.elm.sizes = '';\n      }\n    };\n\n    res.push(h('img', _objectSpread(_objectSpread({}, data), {}, {\n      \"class\": classNames,\n      directives: directives,\n      props: props,\n      attrs: attrs,\n      hook: hook\n    })));\n\n    if (attrs['data-src']) {\n      classNames.push('g-image--lazy');\n      classNames.push('g-image--loading');\n      noscriptClassNames.push('g-image--loaded'); // must render as innerHTML to make hydration work\n\n      res.push(h('noscript', {\n        domProps: {\n          innerHTML: \"\" + \"<img src=\\\"\".concat(props.src.src, \"\\\" class=\\\"\").concat(stringifyClass(noscriptClassNames), \"\\\"\") + (attrs.width ? \" width=\\\"\".concat(attrs.width, \"\\\"\") : '') + (attrs.alt ? \" alt=\\\"\".concat(attrs.alt, \"\\\"\") : '') + \">\"\n        }\n      }));\n    }\n\n    return res;\n  }\n};",null]}