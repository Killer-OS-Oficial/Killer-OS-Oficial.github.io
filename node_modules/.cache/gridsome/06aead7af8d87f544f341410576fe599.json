{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/OnThisPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/OnThisPage.vue","mtime":1601735446918},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601737131598},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":1601737131580},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601737131598},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":1601737142391}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      activeAnchor: '',\n      observer: null\n    };\n  },\n  computed: {\n    page: function page() {\n      return this.$page.markdownPage;\n    },\n    headings: function headings() {\n      return this.page.headings.filter(function (h) {\n        return h.depth > 1;\n      });\n    }\n  },\n  watch: {\n    $route: function $route() {\n      if (process.isClient && window.location.hash) {\n        this.activeAnchor = window.location.hash;\n      } // Clear the current observer.\n\n\n      this.observer.disconnect(); // And create another one for the next page.\n\n      this.$nextTick(this.initObserver);\n    }\n  },\n  methods: {\n    observerCallback: function observerCallback(entries, observer) {\n      // This early return fixes the jumping\n      // of the bubble active state when we click on a link.\n      // There should be only one intersecting element anyways.\n      if (entries.length > 1) {\n        return;\n      }\n\n      var id = entries[0].target.id; // We want to give the link of the intersecting\n      // headline active and add the hash to the url.\n\n      if (id) {\n        this.activeAnchor = '#' + id;\n\n        if (history.replaceState) {\n          history.replaceState(null, null, '#' + id);\n        }\n      }\n    },\n    initObserver: function initObserver() {\n      this.observer = new IntersectionObserver(this.observerCallback, {\n        // This rootMargin should allow intersections at the top of the page.\n        rootMargin: '0px 0px 99999px',\n        threshold: 1\n      });\n      var elements = document.querySelectorAll('.content h2, .content h3, .content h4, .content h5, .content h6');\n\n      for (var i = 0; i < elements.length; i++) {\n        this.observer.observe(elements[i]);\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (process.isClient) {\n      if (window.location.hash) {\n        this.activeAnchor = window.location.hash;\n      }\n\n      this.$nextTick(this.initObserver);\n    }\n  }\n};",null]}