{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue","mtime":1601735446919},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601735434677},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":1601735434382},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601735434677},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":1601735446128}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/es.string.anchor\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport _objectSpread from \"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\nexport default {\n  components: {\n    ChevronRightIcon: ChevronRightIcon,\n    SearchIcon: SearchIcon\n  },\n  data: function data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results: function results() {\n      var fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings: function headings() {\n      var result = [];\n      var allPages = this.$static.allMarkdownPage.edges.map(function (edge) {\n        return edge.node;\n      }); // Create the array of all headings of all pages.\n\n      allPages.forEach(function (page) {\n        page.headings.forEach(function (heading) {\n          result.push(_objectSpread(_objectSpread({}, heading), {}, {\n            path: page.path,\n            title: page.title\n          }));\n        });\n      });\n      return result;\n    },\n    showResult: function showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment: function increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement: function decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go: function go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      var result; // If we don't have focus on a result, just navigate to the first one.\n\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(result.path + result.anchor); // Unfocus the input and reset the query.\n\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n};",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA,OAAA,IAAA,MAAA,SAAA;AACA,SAAA,gBAAA,EAAA,UAAA,QAAA,mBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA,gBADA;AAEA,IAAA,UAAA,EAAA;AAFA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,CAAA,CAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,IAAA,GAAA,IAAA,IAAA,CAAA,KAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,CAAA,OAAA,CADA;AAEA,QAAA,SAAA,EAAA;AAFA,OAAA,CAAA;AAKA,aAAA,IAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,KARA;AASA,IAAA,QATA,sBASA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,QAAA,GAAA,KAAA,OAAA,CAAA,eAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA;AAAA,OAAA,CAAA,CAFA,CAIA;;AACA,MAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,iCACA,OADA;AAEA,YAAA,IAAA,EAAA,IAAA,CAAA,IAFA;AAGA,YAAA,KAAA,EAAA,IAAA,CAAA;AAHA;AAKA,SANA;AAOA,OARA;AAUA,aAAA,MAAA;AACA,KAzBA;AA0BA,IAAA,UA1BA,wBA0BA;AACA;AACA,aAAA,KAAA,OAAA,IAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA;AA7BA,GAbA;AA4CA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,KAAA,UAAA,GAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,UAAA;AACA;AACA,KALA;AAMA,IAAA,SANA,uBAMA;AACA,UAAA,KAAA,UAAA,IAAA,CAAA,EAAA;AACA,aAAA,UAAA;AACA;AACA,KAVA;AAWA,IAAA,EAXA,gBAWA;AACA;AACA,UAAA,KAAA,OAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA;AACA;;AAEA,UAAA,MAAA,CANA,CAQA;;AACA,UAAA,KAAA,UAAA,KAAA,CAAA,CAAA,EAAA;AACA,QAAA,MAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,MAAA,GAAA,KAAA,OAAA,CAAA,KAAA,UAAA,CAAA;AACA;;AAEA,WAAA,OAAA,CAAA,IAAA,CACA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,MADA,EAfA,CAmBA;;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,IAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA;AAjCA;AA5CA,CAAA","sourcesContent":["<template>\n  <div\n    @keydown.down=\"increment\"\n    @keydown.up=\"decrement\"\n    @keydown.enter=\"go\"\n    class=\"relative\"\n  >\n    <label class=\"relative block\">\n      <span class=\"sr-only\">Buscar en Killer-OS Wiki</span>\n      <div class=\"absolute inset-y-0 left-0 flex items-center justify-center px-3 py-2 opacity-50\">\n        <SearchIcon size=\"1.25x\" class=\"text-ui-typo\" />\n      </div>\n      <input\n        ref=\"input\"\n        type=\"search\"\n        :value=\"query\"\n        class=\"block w-full py-2 pl-10 pr-4 border-2 rounded-lg bg-ui-sidebar border-ui-sidebar focus:bg-ui-background\"\n        :class=\"{'rounded-b-none': showResult,}\"\n        placeholder=\"Buscar en Killer-OS Wiki...\"\n        @focus=\"focused = true\"\n        @blur=\"focused = false\"\n        @input=\"focusIndex = -1; query = $event.target.value\"\n        @change=\"query = $event.target.value\"\n      />\n    </label>\n    <div\n      v-if=\"showResult\"\n      class=\"fixed inset-x-0 z-50 overflow-y-auto border-2 border-t-0 rounded-lg rounded-t-none shadow-lg results bg-ui-background bottom:0 sm:bottom-auto sm:absolute border-ui-sidebar\"\n      style=\"max-height: calc(100vh - 120px)\"\n    >\n      <ul class=\"px-4 py-2 m-0\">\n        <li v-if=\"results.length === 0\" class=\"px-2\">\n          No hay resultados para <span class=\"font-bold\">{{ query }}</span>.\n        </li>\n\n        <li\n          v-else\n          v-for=\"(result, index) in results\"\n          :key=\"result.path + result.anchor\"\n          @mouseenter=\"focusIndex = index\"\n          @mousedown=\"go\"\n          class=\"border-ui-sidebar\"\n          :class=\"{\n            'border-b': index + 1 !== results.length\n          }\"\n        >\n          <g-link\n            :to=\"result.path + result.anchor\"\n            class=\"block p-2 -mx-2 text-base font-bold rounded-lg\"\n            :class=\"{\n              'bg-ui-sidebar text-ui-primary': focusIndex === index,\n            }\"\n          >\n\n            <span v-if=\"result.value === result.title\">\n              {{ result.value }}\n            </span>\n\n            <span v-else class=\"flex items-center\">\n              {{ result.title }}\n              <ChevronRightIcon size=\"1x\" class=\"mx-1\" />\n              <span class=\"font-normal opacity-75\">{{ result.value }}</span>\n            </span>\n\n          </g-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<static-query>\nquery Search {\n   allMarkdownPage{\n    edges {\n      node {\n        id\n        path\n        title\n        headings {\n        \tdepth\n          value\n          anchor\n      \t}\n      }\n    }\n  }\n}\n</static-query>\n\n<script>\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\n\nexport default {\n  components: {\n    ChevronRightIcon,\n    SearchIcon\n  },\n\n  data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results() {\n      const fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings() {\n      let result = [];\n      const allPages = this.$static.allMarkdownPage.edges.map(edge => edge.node);\n\n      // Create the array of all headings of all pages.\n      allPages.forEach(page => {\n        page.headings.forEach(heading => {\n          result.push({\n            ...heading,\n            path: page.path,\n            title: page.title\n          });\n        });\n      });\n\n      return result;\n    },\n    showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      let result;\n\n      // If we don't have focus on a result, just navigate to the first one.\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(\n        result.path + result.anchor\n      );\n\n      // Unfocus the input and reset the query.\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}