{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/gridsome/app/graphql/guard.js","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/gridsome/app/graphql/guard.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es.function.name\";\nimport fetch from '../fetch';\nimport config from '~/.temp/config';\nimport { getResults, setResults, formatError } from './shared';\nexport default (function (to, from, next) {\n  if (process.isServer) return next(); // A custom route added by `router.addRoutes()`.\n\n  if (to.meta && to.meta.__custom) {\n    global.__INITIAL_STATE__ = null;\n    return next();\n  }\n\n  var cached = getResults(to.path); // Stop here if data for the next page is already fetched.\n\n  if (cached) {\n    return cached.context.__notFound && to.name !== '*' ? next({\n      name: '*',\n      params: {\n        0: to.path\n      }\n    }) : next();\n  } // The data already exists in the markup for the initial page.\n\n\n  if (process.isProduction && global.__INITIAL_STATE__) {\n    var context = global.__INITIAL_STATE__.context;\n    setResults(to.path, global.__INITIAL_STATE__);\n    global.__INITIAL_STATE__ = null;\n    return context.__notFound && to.name !== '*' ? next({\n      name: '*',\n      params: {\n        0: to.path\n      }\n    }) : next();\n  }\n\n  fetch(to).then(function (res) {\n    if (res.code === 404) {\n      next({\n        name: '*',\n        params: {\n          0: to.path\n        }\n      });\n    } else {\n      setResults(to.path, res);\n      next();\n    }\n  })[\"catch\"](function (err) {\n    if (err.code === 'MODULE_NOT_FOUND' || err.code === 404) {\n      console.error(err);\n      next({\n        name: '*',\n        params: {\n          0: to.path\n        }\n      });\n    } else if (err.code === 'INVALID_HASH' && to.path !== window.location.pathname) {\n      var _config$pathPrefix;\n\n      var fullPathWithPrefix = ((_config$pathPrefix = config.pathPrefix) !== null && _config$pathPrefix !== void 0 ? _config$pathPrefix : '') + to.fullPath;\n      window.location.assign(fullPathWithPrefix);\n    } else {\n      formatError(err, to);\n      next(err);\n    }\n  });\n});",null]}