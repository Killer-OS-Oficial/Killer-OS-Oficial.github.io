{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/Search.vue","mtime":1601735446919},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Fuse from 'fuse.js';\nimport { ChevronRightIcon, SearchIcon } from 'vue-feather-icons';\n\nexport default {\n  components: {\n    ChevronRightIcon,\n    SearchIcon\n  },\n\n  data() {\n    return {\n      query: '',\n      focusIndex: -1,\n      focused: false\n    };\n  },\n  computed: {\n    results() {\n      const fuse = new Fuse(this.headings, {\n        keys: ['value'],\n        threshold: .25\n      });\n\n      return fuse.search(this.query).slice(0, 15);\n    },\n    headings() {\n      let result = [];\n      const allPages = this.$static.allMarkdownPage.edges.map(edge => edge.node);\n\n      // Create the array of all headings of all pages.\n      allPages.forEach(page => {\n        page.headings.forEach(heading => {\n          result.push({\n            ...heading,\n            path: page.path,\n            title: page.title\n          });\n        });\n      });\n\n      return result;\n    },\n    showResult() {\n      // Show results, if the input is focused and the query is not empty.\n      return this.focused && this.query.length > 0;\n    }\n  },\n  methods: {\n    increment() {\n      if (this.focusIndex < this.results.length - 1) {\n        this.focusIndex++;\n      }\n    },\n    decrement() {\n      if (this.focusIndex >= 0) {\n        this.focusIndex--;\n      }\n    },\n    go() {\n      // Do nothing if we don't have results.\n      if (this.results.length === 0) {\n        return;\n      }\n\n      let result;\n\n      // If we don't have focus on a result, just navigate to the first one.\n      if (this.focusIndex === -1) {\n        result = this.results[0];\n      } else {\n        result = this.results[this.focusIndex];\n      }\n\n      this.$router.push(\n        result.path + result.anchor\n      );\n\n      // Unfocus the input and reset the query.\n      this.$refs.input.blur();\n      this.query = '';\n    }\n  }\n\n};\n",null]}