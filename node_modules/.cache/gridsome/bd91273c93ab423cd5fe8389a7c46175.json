{"remainingRequest":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/NextPrevLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/src/components/NextPrevLinks.vue","mtime":1601735446918},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601737131598},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/babel-loader/lib/index.js","mtime":1601737131580},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1601737131598},{"path":"/home/killer/Documentos/Dev/Killer-OS-Oficial.github.io/node_modules/vue-loader/lib/index.js","mtime":1601737142391}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.find\";\nimport \"core-js/modules/es.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ArrowLeftIcon, ArrowRightIcon } from 'vue-feather-icons';\nexport default {\n  components: {\n    ArrowLeftIcon: ArrowLeftIcon,\n    ArrowRightIcon: ArrowRightIcon\n  },\n  computed: {\n    page: function page() {\n      return this.$page.markdownPage;\n    },\n    pages: function pages() {\n      return this.$page.allMarkdownPage.edges.map(function (edge) {\n        return edge.node;\n      });\n    },\n    next: function next() {\n      var _this = this;\n\n      if (this.pages && !this.page.next) {\n        return false;\n      }\n\n      return this.pages.find(function (page) {\n        return page.path === _this.page.next;\n      });\n    },\n    prev: function prev() {\n      var _this2 = this;\n\n      if (this.pages && !this.page.prev) {\n        return false;\n      }\n\n      return this.pages.find(function (page) {\n        return page.path === _this2.page.prev;\n      });\n    }\n  }\n};",null]}